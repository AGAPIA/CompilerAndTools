module MAIN{listen nil}{read n:int, filea:string, fileb:string}
{
	READARRAYS
	%
	foreach_s(n)
	{
		COMPUTESINGLEDOT
	}
	%
	COMBINEANDPRINTRESULT
}{speak nil}{write nil}

module READARRAYS{listen nil}{read n:int, filea:string, fileb:string} @MASTER
{
	FILE* fA = fopen(*filea, "r");
	FILE* fB = fopen(*fileb, "r");
	if (fA == NULL && fB == NULL)
	{
		printf("Input files doesn't exists. Exiting\n");
		exit(3);
	}

	// Read numbers for file, and create a vector with pairs: a number from A, a number from B
	for (int i = 0; i < n; i++)
	{
		int nrA, nrB;
		fscanf(fA, "%d", &nrA);
		fscanf(fB, "%d", &nrB);
		
		numbers@[i].nra = nrA;
		numbers@[i].nrb = nrB;
	}
}{speak nil}{write ((nra:int, nrb:int)numbers[];)}

module COMPUTESINGLEDOT{listen nil}{read nra:int, nrb:int}
{
	nr = nra * nrb;
}{speak nil}{write nr:int}

module COMBINEANDPRINTRESULT{listen nil}{read ((nr:int)numbers[];)} @MASTER
{
	int nrValues = GetNumItemsInVectorProcessItem(numbers);
	int sum = 0;
	for (int i = 0; i < nrValues; i++)
	{
		SimpleProcessItem* pSPI = numbers@[i];
		IntDataItem* pIntData = (IntDataItem*)pSPI->GetItem(0);
		sum += pIntData->GetValue();
	}
	printf("%d\n", sum);
}{speak nil}{write nil}
