	int nrValues = GetNumItemsInVectorProcessItem(numbers);
	printf("%d\n",nrValues);
	std::vector<int> generatednumbers;
	printf("Gather\n");
	for (int i = 0; i < nrValues; i++)
	{
	SimpleProcessItem* pSPI = (SimpleProcessItem*)GetVectorItemByIndex(numbers, i, 0);
		BufferDataItem* pIntData = (BufferDataItem*)pSPI->GetItem(0);
		char *pData = pIntData->m_pData;
		const int iDataSize = pIntData->m_iBufferSize;
		int* num = (int*) pData;
		for (int i=0;i<(iDataSize/sizeof(int));++i)
			generatednumbers.push_back(num[i]);
	}
	const int size = generatednumbers.size();
	const int iDataSize = size * sizeof(int);
	int* numb = new int[size];
	for (int i=0;i<size;++i)
		numb[i] = generatednumbers[i];
	char* pDataBegin = (char*) numb;
	buf->SetValue(pDataBegin, iDataSize);
	
