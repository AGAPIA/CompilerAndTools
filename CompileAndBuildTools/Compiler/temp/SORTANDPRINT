	char *pData = (char*) buf->m_pData;
	const int iDataSize = buf->m_iBufferSize;
	int* generatednumbers = (int*)pData;
	std::vector<int> numbers2;
	for (int i=0;i<(iDataSize/sizeof(int));++i)
		numbers2.push_back(generatednumbers[i]);
	char *pData2 = (char*) buf2->m_pData;
	const int iDataSize2 = buf2->m_iBufferSize;
	inputWord* w = (inputWord*) pData2;
	std::vector<inputWord> input;
	for (int i=0;i<iDataSize2/sizeof(inputWord);++i)
		input.push_back(w[i]);
	for (int i=0;i<input.size();++i)
		input[i].generatedNumber = numbers2[i];
	std::sort(input.begin(),input.end(),comp);
	char *filenameout = (char*)buf3->m_pData;
	std::ofstream f("key.txt");
	std::ofstream fout(filenameout);
        int sz = input.size() - 1;
	for (int i = 0; i < sz; ++i)
	{
			fout << input[i].word << " ";
			f << encrypt(input[i].index) << " ";
	}
	fout << input[input.size() - 1].word;
	f << encrypt(input[input.size() - 1].index);
