module MAIN{listen nil}{read b:int}
{
	while_t (b > 0)
	{
	 TESTANDGODOWN
	 %
	 TESTANDGODOWN2 
	}
	$
	SHOWRESULTS
}{speak nil}{write nil}

module SHOWRESULTS {listen ((a : int) results [];) } {read b:int}	@MASTER
{
	int numItemsInWest = GetNumItemsInVectorProcessItem(results);
   	printf("Results:\n");
   	for (int i = 0; i < numItemsInWest; i++)
   	{
   		SimpleProcessItem* pSBPP = results@[i];
   		int val = ((IntDataItem*)pSBPP->GetItem(0))->GetValue();
   		printf("%d\n", val);
   	}
	
	printf("Finished Identity\n");
}{speak nil}{write nil}

module TESTANDGODOWN {listen nil} {read b:int}	@MASTER
{
	bout = b;
}{speak nil}{write bout:int}
module TESTANDGODOWN2 {listen nil} {read b:int}	@MASTER
{
	bout = b - 1;
	x = bout * bout;
}{speak x:int}{write bout:int}
