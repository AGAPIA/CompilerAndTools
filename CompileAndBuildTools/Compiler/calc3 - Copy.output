Terminals unused in grammar

   PRINT


Grammar

    0 $accept: agapiacode $end

    1 agapiacode: modules_list

    2 modules_list: modules_list module
    3             | module

    4 module: MODULE IDENTIFIER_BIG module_input '{' module_body '}' module_output

    5 module_input: '{' LISTEN processinputlist '}' '{' READ processinputlist '}'

    6 module_output: '{' SPEAK processinputlist '}' '{' WRITE processinputlist '}'

    7 module_body: program
    8            | stmt_list

    9 processinputlist: processinputlist ';' singleproceslist
   10                 | singleproceslist
   11                 | NIL

   12 singleproceslist: simplevariablelist
   13                 | '(' '(' simplevariablelist ';' ')' '[' ']' ')'

   14 simplevariablelist: simplevariablelist ',' variable
   15                   | variable

   16 variable: IDENTIFIER_LOW ':' datatype
   17         | IDENTIFIER_LOW ':' datatype '[' ']'

   18 datatype: DTYPE_INT
   19         | DTYPE_BOOL
   20         | DTYPE_STRING
   21         | DTYPE_FLOAT
   22         | DTYPE_ARRAY

   23 program: IDENTIFIER_BIG
   24        | asignment
   25        | variable
   26        | program COMPOSITION_HORIZONTAL program
   27        | program COMPOSITION_VERTICAL program
   28        | program COMPOSITION_DIAGONAL program
   29        | '(' program ')'

   30 $@1: /* empty */

   31 program: IF '(' boolean_expr ')' '{' program '}' $@1

   32 $@2: /* empty */

   33 program: IF '(' boolean_expr ')' '{' program '}' ELSE '{' program '}' $@2
   34        | WHILE_S '(' boolean_expr ')' '{' program '}'
   35        | WHILE_ST '(' boolean_expr ')' '{' program '}'
   36        | WHILE_T '(' boolean_expr ')' '{' program '}'
   37        | FOR_S '(' expr ')' '{' program '}'
   38        | FOR_ST '(' expr ')' '{' program '}'
   39        | FOR_T '(' expr ')' '{' program '}'
   40        | /* empty */

   41 stmt_list: stmt_list statement ';'
   42          | statement ';'

   43 statement: asignment
   44          | WHILE '(' boolean_expr ')' '{' stmt_list '}'
   45          | IF '(' boolean_expr ')' '{' stmt_list '}'
   46          | IF '(' boolean_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   47          | FOR '(' expr ')' '{' stmt_list '}'

   48 asignment: IDENTIFIER_LOW '=' expr

   49 expr: INTEGER
   50     | FLOAT
   51     | IDENTIFIER_LOW
   52     | IDENTIFIER_LOW '[' expr ']'
   53     | '(' expr ')'
   54     | '-' expr
   55     | expr '+' expr
   56     | expr '-' expr
   57     | expr '*' expr
   58     | expr '/' expr
   59     | boolean_expr

   60 boolean_expr: expr '<' expr
   61             | expr '>' expr
   62             | expr GE expr
   63             | expr LE expr
   64             | expr NE expr
   65             | expr EQ expr
   66             | expr AND expr
   67             | expr OR expr
   68             | '(' boolean_expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13 29 31 33 34 35 36 37 38 39 44 45 46 47 53 68
')' (41) 13 29 31 33 34 35 36 37 38 39 44 45 46 47 53 68
'*' (42) 57
'+' (43) 55
',' (44) 14
'-' (45) 54 56
'/' (47) 58
':' (58) 16 17
';' (59) 9 13 41 42
'<' (60) 60
'=' (61) 48
'>' (62) 61
'[' (91) 13 17 52
']' (93) 13 17 52
'{' (123) 4 5 6 31 33 34 35 36 37 38 39 44 45 46 47
'}' (125) 4 5 6 31 33 34 35 36 37 38 39 44 45 46 47
error (256)
NIL (258) 11
LISTEN (259) 5
READ (260) 5
SPEAK (261) 6
WRITE (262) 6
COMPOSITION_DIAGONAL (263) 28
COMPOSITION_VERTICAL (264) 27
COMPOSITION_HORIZONTAL (265) 26
WHILE (266) 44
IF (267) 31 33 45 46
PRINT (268)
MODULE (269) 4
FOR (270) 47
FOR_S (271) 37
FOR_T (272) 39
FOR_ST (273) 38
WHILE_S (274) 34
WHILE_T (275) 36
WHILE_ST (276) 35
AND (277) 66
OR (278) 67
DTYPE_INT (279) 18
DTYPE_BOOL (280) 19
DTYPE_FLOAT (281) 21
DTYPE_STRING (282) 20
DTYPE_ARRAY (283) 22
INTEGER (284) 49
IDENTIFIER_LOW (285) 16 17 48 51 52
IDENTIFIER_BIG (286) 4 23
FLOAT (287) 50
IFX (288)
ELSE (289) 33 46
EXPR_WITHOUT_BOOL (290)
NE (291) 64
EQ (292) 65
LE (293) 63
GE (294) 62
UMINUS (295)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
agapiacode (58)
    on left: 1, on right: 0
modules_list (59)
    on left: 2 3, on right: 1 2
module (60)
    on left: 4, on right: 2 3
module_input (61)
    on left: 5, on right: 4
module_output (62)
    on left: 6, on right: 4
module_body (63)
    on left: 7 8, on right: 4
processinputlist (64)
    on left: 9 10 11, on right: 5 6 9
singleproceslist (65)
    on left: 12 13, on right: 9 10
simplevariablelist (66)
    on left: 14 15, on right: 12 13 14
variable (67)
    on left: 16 17, on right: 14 15 25
datatype (68)
    on left: 18 19 20 21 22, on right: 16 17
program (69)
    on left: 23 24 25 26 27 28 29 31 33 34 35 36 37 38 39 40, on right:
    7 26 27 28 29 31 33 34 35 36 37 38 39
$@1 (70)
    on left: 30, on right: 31
$@2 (71)
    on left: 32, on right: 33
stmt_list (72)
    on left: 41 42, on right: 8 41 44 45 46 47
statement (73)
    on left: 43 44 45 46 47, on right: 41 42
asignment (74)
    on left: 48, on right: 24 43
expr (75)
    on left: 49 50 51 52 53 54 55 56 57 58 59, on right: 37 38 39 47
    48 52 53 54 55 56 57 58 60 61 62 63 64 65 66 67
boolean_expr (76)
    on left: 60 61 62 63 64 65 66 67 68, on right: 31 33 34 35 36 44
    45 46 59 68


state 0

    0 $accept: . agapiacode $end

    MODULE  shift, and go to state 1

    agapiacode    go to state 2
    modules_list  go to state 3
    module        go to state 4


state 1

    4 module: MODULE . IDENTIFIER_BIG module_input '{' module_body '}' module_output

    IDENTIFIER_BIG  shift, and go to state 5


state 2

    0 $accept: agapiacode . $end

    $end  shift, and go to state 6


state 3

    1 agapiacode: modules_list .
    2 modules_list: modules_list . module

    MODULE  shift, and go to state 1

    $default  reduce using rule 1 (agapiacode)

    module  go to state 7


state 4

    3 modules_list: module .

    $default  reduce using rule 3 (modules_list)


state 5

    4 module: MODULE IDENTIFIER_BIG . module_input '{' module_body '}' module_output

    '{'  shift, and go to state 8

    module_input  go to state 9


state 6

    0 $accept: agapiacode $end .

    $default  accept


state 7

    2 modules_list: modules_list module .

    $default  reduce using rule 2 (modules_list)


state 8

    5 module_input: '{' . LISTEN processinputlist '}' '{' READ processinputlist '}'

    LISTEN  shift, and go to state 10


state 9

    4 module: MODULE IDENTIFIER_BIG module_input . '{' module_body '}' module_output

    '{'  shift, and go to state 11


state 10

    5 module_input: '{' LISTEN . processinputlist '}' '{' READ processinputlist '}'

    NIL             shift, and go to state 12
    IDENTIFIER_LOW  shift, and go to state 13
    '('             shift, and go to state 14

    processinputlist    go to state 15
    singleproceslist    go to state 16
    simplevariablelist  go to state 17
    variable            go to state 18


state 11

    4 module: MODULE IDENTIFIER_BIG module_input '{' . module_body '}' module_output

    WHILE           shift, and go to state 19
    IF              shift, and go to state 20
    FOR             shift, and go to state 21
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    module_body  go to state 31
    variable     go to state 32
    program      go to state 33
    stmt_list    go to state 34
    statement    go to state 35
    asignment    go to state 36


state 12

   11 processinputlist: NIL .

    $default  reduce using rule 11 (processinputlist)


state 13

   16 variable: IDENTIFIER_LOW . ':' datatype
   17         | IDENTIFIER_LOW . ':' datatype '[' ']'

    ':'  shift, and go to state 37


state 14

   13 singleproceslist: '(' . '(' simplevariablelist ';' ')' '[' ']' ')'

    '('  shift, and go to state 38


state 15

    5 module_input: '{' LISTEN processinputlist . '}' '{' READ processinputlist '}'
    9 processinputlist: processinputlist . ';' singleproceslist

    '}'  shift, and go to state 39
    ';'  shift, and go to state 40


state 16

   10 processinputlist: singleproceslist .

    $default  reduce using rule 10 (processinputlist)


state 17

   12 singleproceslist: simplevariablelist .
   14 simplevariablelist: simplevariablelist . ',' variable

    ','  shift, and go to state 41

    $default  reduce using rule 12 (singleproceslist)


state 18

   15 simplevariablelist: variable .

    $default  reduce using rule 15 (simplevariablelist)


state 19

   44 statement: WHILE . '(' boolean_expr ')' '{' stmt_list '}'

    '('  shift, and go to state 42


state 20

   31 program: IF . '(' boolean_expr ')' '{' program '}' $@1
   33        | IF . '(' boolean_expr ')' '{' program '}' ELSE '{' program '}' $@2
   45 statement: IF . '(' boolean_expr ')' '{' stmt_list '}'
   46          | IF . '(' boolean_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'

    '('  shift, and go to state 43


state 21

   47 statement: FOR . '(' expr ')' '{' stmt_list '}'

    '('  shift, and go to state 44


state 22

   37 program: FOR_S . '(' expr ')' '{' program '}'

    '('  shift, and go to state 45


state 23

   39 program: FOR_T . '(' expr ')' '{' program '}'

    '('  shift, and go to state 46


state 24

   38 program: FOR_ST . '(' expr ')' '{' program '}'

    '('  shift, and go to state 47


state 25

   34 program: WHILE_S . '(' boolean_expr ')' '{' program '}'

    '('  shift, and go to state 48


state 26

   36 program: WHILE_T . '(' boolean_expr ')' '{' program '}'

    '('  shift, and go to state 49


state 27

   35 program: WHILE_ST . '(' boolean_expr ')' '{' program '}'

    '('  shift, and go to state 50


state 28

   16 variable: IDENTIFIER_LOW . ':' datatype
   17         | IDENTIFIER_LOW . ':' datatype '[' ']'
   48 asignment: IDENTIFIER_LOW . '=' expr

    ':'  shift, and go to state 37
    '='  shift, and go to state 51


state 29

   23 program: IDENTIFIER_BIG .

    $default  reduce using rule 23 (program)


state 30

   29 program: '(' . program ')'

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 53
    asignment  go to state 54


state 31

    4 module: MODULE IDENTIFIER_BIG module_input '{' module_body . '}' module_output

    '}'  shift, and go to state 55


state 32

   25 program: variable .

    $default  reduce using rule 25 (program)


state 33

    7 module_body: program .
   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58

    $default  reduce using rule 7 (module_body)


state 34

    8 module_body: stmt_list .
   41 stmt_list: stmt_list . statement ';'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 59
    FOR             shift, and go to state 21
    IDENTIFIER_LOW  shift, and go to state 60

    $default  reduce using rule 8 (module_body)

    statement  go to state 61
    asignment  go to state 62


state 35

   42 stmt_list: statement . ';'

    ';'  shift, and go to state 63


state 36

   24 program: asignment .
   43 statement: asignment .

    ';'       reduce using rule 43 (statement)
    $default  reduce using rule 24 (program)


state 37

   16 variable: IDENTIFIER_LOW ':' . datatype
   17         | IDENTIFIER_LOW ':' . datatype '[' ']'

    DTYPE_INT     shift, and go to state 64
    DTYPE_BOOL    shift, and go to state 65
    DTYPE_FLOAT   shift, and go to state 66
    DTYPE_STRING  shift, and go to state 67
    DTYPE_ARRAY   shift, and go to state 68

    datatype  go to state 69


state 38

   13 singleproceslist: '(' '(' . simplevariablelist ';' ')' '[' ']' ')'

    IDENTIFIER_LOW  shift, and go to state 13

    simplevariablelist  go to state 70
    variable            go to state 18


state 39

    5 module_input: '{' LISTEN processinputlist '}' . '{' READ processinputlist '}'

    '{'  shift, and go to state 71


state 40

    9 processinputlist: processinputlist ';' . singleproceslist

    IDENTIFIER_LOW  shift, and go to state 13
    '('             shift, and go to state 14

    singleproceslist    go to state 72
    simplevariablelist  go to state 17
    variable            go to state 18


state 41

   14 simplevariablelist: simplevariablelist ',' . variable

    IDENTIFIER_LOW  shift, and go to state 13

    variable  go to state 73


state 42

   44 statement: WHILE '(' . boolean_expr ')' '{' stmt_list '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 79
    boolean_expr  go to state 80


state 43

   31 program: IF '(' . boolean_expr ')' '{' program '}' $@1
   33        | IF '(' . boolean_expr ')' '{' program '}' ELSE '{' program '}' $@2
   45 statement: IF '(' . boolean_expr ')' '{' stmt_list '}'
   46          | IF '(' . boolean_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 79
    boolean_expr  go to state 81


state 44

   47 statement: FOR '(' . expr ')' '{' stmt_list '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 82
    boolean_expr  go to state 83


state 45

   37 program: FOR_S '(' . expr ')' '{' program '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 84
    boolean_expr  go to state 83


state 46

   39 program: FOR_T '(' . expr ')' '{' program '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 85
    boolean_expr  go to state 83


state 47

   38 program: FOR_ST '(' . expr ')' '{' program '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 86
    boolean_expr  go to state 83


state 48

   34 program: WHILE_S '(' . boolean_expr ')' '{' program '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 79
    boolean_expr  go to state 87


state 49

   36 program: WHILE_T '(' . boolean_expr ')' '{' program '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 79
    boolean_expr  go to state 88


state 50

   35 program: WHILE_ST '(' . boolean_expr ')' '{' program '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 79
    boolean_expr  go to state 89


state 51

   48 asignment: IDENTIFIER_LOW '=' . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 90
    boolean_expr  go to state 83


state 52

   31 program: IF . '(' boolean_expr ')' '{' program '}' $@1
   33        | IF . '(' boolean_expr ')' '{' program '}' ELSE '{' program '}' $@2

    '('  shift, and go to state 91


state 53

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   29        | '(' program . ')'

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58
    ')'                     shift, and go to state 92


state 54

   24 program: asignment .

    $default  reduce using rule 24 (program)


state 55

    4 module: MODULE IDENTIFIER_BIG module_input '{' module_body '}' . module_output

    '{'  shift, and go to state 93

    module_output  go to state 94


state 56

   28 program: program COMPOSITION_DIAGONAL . program

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 95
    asignment  go to state 54


state 57

   27 program: program COMPOSITION_VERTICAL . program

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 96
    asignment  go to state 54


state 58

   26 program: program COMPOSITION_HORIZONTAL . program

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 97
    asignment  go to state 54


state 59

   45 statement: IF . '(' boolean_expr ')' '{' stmt_list '}'
   46          | IF . '(' boolean_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'

    '('  shift, and go to state 98


state 60

   48 asignment: IDENTIFIER_LOW . '=' expr

    '='  shift, and go to state 51


state 61

   41 stmt_list: stmt_list statement . ';'

    ';'  shift, and go to state 99


state 62

   43 statement: asignment .

    $default  reduce using rule 43 (statement)


state 63

   42 stmt_list: statement ';' .

    $default  reduce using rule 42 (stmt_list)


state 64

   18 datatype: DTYPE_INT .

    $default  reduce using rule 18 (datatype)


state 65

   19 datatype: DTYPE_BOOL .

    $default  reduce using rule 19 (datatype)


state 66

   21 datatype: DTYPE_FLOAT .

    $default  reduce using rule 21 (datatype)


state 67

   20 datatype: DTYPE_STRING .

    $default  reduce using rule 20 (datatype)


state 68

   22 datatype: DTYPE_ARRAY .

    $default  reduce using rule 22 (datatype)


state 69

   16 variable: IDENTIFIER_LOW ':' datatype .
   17         | IDENTIFIER_LOW ':' datatype . '[' ']'

    '['  shift, and go to state 100

    $default  reduce using rule 16 (variable)


state 70

   13 singleproceslist: '(' '(' simplevariablelist . ';' ')' '[' ']' ')'
   14 simplevariablelist: simplevariablelist . ',' variable

    ';'  shift, and go to state 101
    ','  shift, and go to state 41


state 71

    5 module_input: '{' LISTEN processinputlist '}' '{' . READ processinputlist '}'

    READ  shift, and go to state 102


state 72

    9 processinputlist: processinputlist ';' singleproceslist .

    $default  reduce using rule 9 (processinputlist)


state 73

   14 simplevariablelist: simplevariablelist ',' variable .

    $default  reduce using rule 14 (simplevariablelist)


state 74

   49 expr: INTEGER .

    $default  reduce using rule 49 (expr)


state 75

   51 expr: IDENTIFIER_LOW .
   52     | IDENTIFIER_LOW . '[' expr ']'

    '['  shift, and go to state 103

    $default  reduce using rule 51 (expr)


state 76

   50 expr: FLOAT .

    $default  reduce using rule 50 (expr)


state 77

   54 expr: '-' . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 104
    boolean_expr  go to state 83


state 78

   53 expr: '(' . expr ')'
   68 boolean_expr: '(' . boolean_expr ')'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 105
    boolean_expr  go to state 106


state 79

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    NE   shift, and go to state 111
    EQ   shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118


state 80

   44 statement: WHILE '(' boolean_expr . ')' '{' stmt_list '}'
   59 expr: boolean_expr .

    ')'  shift, and go to state 119

    $default  reduce using rule 59 (expr)


state 81

   31 program: IF '(' boolean_expr . ')' '{' program '}' $@1
   33        | IF '(' boolean_expr . ')' '{' program '}' ELSE '{' program '}' $@2
   45 statement: IF '(' boolean_expr . ')' '{' stmt_list '}'
   46          | IF '(' boolean_expr . ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   59 expr: boolean_expr .

    ')'  shift, and go to state 120

    $default  reduce using rule 59 (expr)


state 82

   47 statement: FOR '(' expr . ')' '{' stmt_list '}'
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    ')'  shift, and go to state 121
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    NE   shift, and go to state 111
    EQ   shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118


state 83

   59 expr: boolean_expr .

    $default  reduce using rule 59 (expr)


state 84

   37 program: FOR_S '(' expr . ')' '{' program '}'
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    ')'  shift, and go to state 122
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    NE   shift, and go to state 111
    EQ   shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118


state 85

   39 program: FOR_T '(' expr . ')' '{' program '}'
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    ')'  shift, and go to state 123
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    NE   shift, and go to state 111
    EQ   shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118


state 86

   38 program: FOR_ST '(' expr . ')' '{' program '}'
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    ')'  shift, and go to state 124
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    NE   shift, and go to state 111
    EQ   shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118


state 87

   34 program: WHILE_S '(' boolean_expr . ')' '{' program '}'
   59 expr: boolean_expr .

    ')'  shift, and go to state 125

    $default  reduce using rule 59 (expr)


state 88

   36 program: WHILE_T '(' boolean_expr . ')' '{' program '}'
   59 expr: boolean_expr .

    ')'  shift, and go to state 126

    $default  reduce using rule 59 (expr)


state 89

   35 program: WHILE_ST '(' boolean_expr . ')' '{' program '}'
   59 expr: boolean_expr .

    ')'  shift, and go to state 127

    $default  reduce using rule 59 (expr)


state 90

   48 asignment: IDENTIFIER_LOW '=' expr .
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    NE   shift, and go to state 111
    EQ   shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 48 (asignment)


state 91

   31 program: IF '(' . boolean_expr ')' '{' program '}' $@1
   33        | IF '(' . boolean_expr ')' '{' program '}' ELSE '{' program '}' $@2

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 79
    boolean_expr  go to state 128


state 92

   29 program: '(' program ')' .

    $default  reduce using rule 29 (program)


state 93

    6 module_output: '{' . SPEAK processinputlist '}' '{' WRITE processinputlist '}'

    SPEAK  shift, and go to state 129


state 94

    4 module: MODULE IDENTIFIER_BIG module_input '{' module_body '}' module_output .

    $default  reduce using rule 4 (module)


state 95

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   28        | program COMPOSITION_DIAGONAL program .

    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58

    $default  reduce using rule 28 (program)


state 96

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   27        | program COMPOSITION_VERTICAL program .
   28        | program . COMPOSITION_DIAGONAL program

    COMPOSITION_HORIZONTAL  shift, and go to state 58

    $default  reduce using rule 27 (program)


state 97

   26 program: program . COMPOSITION_HORIZONTAL program
   26        | program COMPOSITION_HORIZONTAL program .
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program

    $default  reduce using rule 26 (program)


state 98

   45 statement: IF '(' . boolean_expr ')' '{' stmt_list '}'
   46          | IF '(' . boolean_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 79
    boolean_expr  go to state 130


state 99

   41 stmt_list: stmt_list statement ';' .

    $default  reduce using rule 41 (stmt_list)


state 100

   17 variable: IDENTIFIER_LOW ':' datatype '[' . ']'

    ']'  shift, and go to state 131


state 101

   13 singleproceslist: '(' '(' simplevariablelist ';' . ')' '[' ']' ')'

    ')'  shift, and go to state 132


state 102

    5 module_input: '{' LISTEN processinputlist '}' '{' READ . processinputlist '}'

    NIL             shift, and go to state 12
    IDENTIFIER_LOW  shift, and go to state 13
    '('             shift, and go to state 14

    processinputlist    go to state 133
    singleproceslist    go to state 16
    simplevariablelist  go to state 17
    variable            go to state 18


state 103

   52 expr: IDENTIFIER_LOW '[' . expr ']'

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 134
    boolean_expr  go to state 83


state 104

   54 expr: '-' expr .
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    $default  reduce using rule 54 (expr)


state 105

   53 expr: '(' expr . ')'
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    ')'  shift, and go to state 135
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    NE   shift, and go to state 111
    EQ   shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118


state 106

   59 expr: boolean_expr .
   68 boolean_expr: '(' boolean_expr . ')'

    ')'  shift, and go to state 136

    $default  reduce using rule 59 (expr)


state 107

   66 boolean_expr: expr AND . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 137
    boolean_expr  go to state 83


state 108

   67 boolean_expr: expr OR . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 138
    boolean_expr  go to state 83


state 109

   61 boolean_expr: expr '>' . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 139
    boolean_expr  go to state 83


state 110

   60 boolean_expr: expr '<' . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 140
    boolean_expr  go to state 83


state 111

   64 boolean_expr: expr NE . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 141
    boolean_expr  go to state 83


state 112

   65 boolean_expr: expr EQ . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 142
    boolean_expr  go to state 83


state 113

   63 boolean_expr: expr LE . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 143
    boolean_expr  go to state 83


state 114

   62 boolean_expr: expr GE . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 144
    boolean_expr  go to state 83


state 115

   55 expr: expr '+' . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 145
    boolean_expr  go to state 83


state 116

   56 expr: expr '-' . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 146
    boolean_expr  go to state 83


state 117

   57 expr: expr '*' . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 147
    boolean_expr  go to state 83


state 118

   58 expr: expr '/' . expr

    INTEGER         shift, and go to state 74
    IDENTIFIER_LOW  shift, and go to state 75
    FLOAT           shift, and go to state 76
    '-'             shift, and go to state 77
    '('             shift, and go to state 78

    expr          go to state 148
    boolean_expr  go to state 83


state 119

   44 statement: WHILE '(' boolean_expr ')' . '{' stmt_list '}'

    '{'  shift, and go to state 149


state 120

   31 program: IF '(' boolean_expr ')' . '{' program '}' $@1
   33        | IF '(' boolean_expr ')' . '{' program '}' ELSE '{' program '}' $@2
   45 statement: IF '(' boolean_expr ')' . '{' stmt_list '}'
   46          | IF '(' boolean_expr ')' . '{' stmt_list '}' ELSE '{' stmt_list '}'

    '{'  shift, and go to state 150


state 121

   47 statement: FOR '(' expr ')' . '{' stmt_list '}'

    '{'  shift, and go to state 151


state 122

   37 program: FOR_S '(' expr ')' . '{' program '}'

    '{'  shift, and go to state 152


state 123

   39 program: FOR_T '(' expr ')' . '{' program '}'

    '{'  shift, and go to state 153


state 124

   38 program: FOR_ST '(' expr ')' . '{' program '}'

    '{'  shift, and go to state 154


state 125

   34 program: WHILE_S '(' boolean_expr ')' . '{' program '}'

    '{'  shift, and go to state 155


state 126

   36 program: WHILE_T '(' boolean_expr ')' . '{' program '}'

    '{'  shift, and go to state 156


state 127

   35 program: WHILE_ST '(' boolean_expr ')' . '{' program '}'

    '{'  shift, and go to state 157


state 128

   31 program: IF '(' boolean_expr . ')' '{' program '}' $@1
   33        | IF '(' boolean_expr . ')' '{' program '}' ELSE '{' program '}' $@2
   59 expr: boolean_expr .

    ')'  shift, and go to state 158

    $default  reduce using rule 59 (expr)


state 129

    6 module_output: '{' SPEAK . processinputlist '}' '{' WRITE processinputlist '}'

    NIL             shift, and go to state 12
    IDENTIFIER_LOW  shift, and go to state 13
    '('             shift, and go to state 14

    processinputlist    go to state 159
    singleproceslist    go to state 16
    simplevariablelist  go to state 17
    variable            go to state 18


state 130

   45 statement: IF '(' boolean_expr . ')' '{' stmt_list '}'
   46          | IF '(' boolean_expr . ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   59 expr: boolean_expr .

    ')'  shift, and go to state 160

    $default  reduce using rule 59 (expr)


state 131

   17 variable: IDENTIFIER_LOW ':' datatype '[' ']' .

    $default  reduce using rule 17 (variable)


state 132

   13 singleproceslist: '(' '(' simplevariablelist ';' ')' . '[' ']' ')'

    '['  shift, and go to state 161


state 133

    5 module_input: '{' LISTEN processinputlist '}' '{' READ processinputlist . '}'
    9 processinputlist: processinputlist . ';' singleproceslist

    '}'  shift, and go to state 162
    ';'  shift, and go to state 40


state 134

   52 expr: IDENTIFIER_LOW '[' expr . ']'
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    NE   shift, and go to state 111
    EQ   shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    ']'  shift, and go to state 163


state 135

   53 expr: '(' expr ')' .

    $default  reduce using rule 53 (expr)


state 136

   68 boolean_expr: '(' boolean_expr ')' .

    $default  reduce using rule 68 (boolean_expr)


state 137

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   66             | expr AND expr .
   67             | expr . OR expr

    $default  reduce using rule 66 (boolean_expr)


state 138

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr
   67             | expr OR expr .

    $default  reduce using rule 67 (boolean_expr)


state 139

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   61             | expr '>' expr .
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 61 (boolean_expr)


state 140

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   60             | expr '<' expr .
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 60 (boolean_expr)


state 141

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   64             | expr NE expr .
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 64 (boolean_expr)


state 142

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   65             | expr EQ expr .
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 65 (boolean_expr)


state 143

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   63             | expr LE expr .
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 63 (boolean_expr)


state 144

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   62             | expr GE expr .
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 62 (boolean_expr)


state 145

   55 expr: expr . '+' expr
   55     | expr '+' expr .
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 55 (expr)


state 146

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   56     | expr '-' expr .
   57     | expr . '*' expr
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 56 (expr)


state 147

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   57     | expr '*' expr .
   58     | expr . '/' expr
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108

    $default  reduce using rule 57 (expr)


state 148

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   58     | expr '/' expr .
   60 boolean_expr: expr . '<' expr
   61             | expr . '>' expr
   62             | expr . GE expr
   63             | expr . LE expr
   64             | expr . NE expr
   65             | expr . EQ expr
   66             | expr . AND expr
   67             | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108

    $default  reduce using rule 58 (expr)


state 149

   44 statement: WHILE '(' boolean_expr ')' '{' . stmt_list '}'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 59
    FOR             shift, and go to state 21
    IDENTIFIER_LOW  shift, and go to state 60

    stmt_list  go to state 164
    statement  go to state 35
    asignment  go to state 62


state 150

   31 program: IF '(' boolean_expr ')' '{' . program '}' $@1
   33        | IF '(' boolean_expr ')' '{' . program '}' ELSE '{' program '}' $@2
   45 statement: IF '(' boolean_expr ')' '{' . stmt_list '}'
   46          | IF '(' boolean_expr ')' '{' . stmt_list '}' ELSE '{' stmt_list '}'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 20
    FOR             shift, and go to state 21
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 165
    stmt_list  go to state 166
    statement  go to state 35
    asignment  go to state 36


state 151

   47 statement: FOR '(' expr ')' '{' . stmt_list '}'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 59
    FOR             shift, and go to state 21
    IDENTIFIER_LOW  shift, and go to state 60

    stmt_list  go to state 167
    statement  go to state 35
    asignment  go to state 62


state 152

   37 program: FOR_S '(' expr ')' '{' . program '}'

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 168
    asignment  go to state 54


state 153

   39 program: FOR_T '(' expr ')' '{' . program '}'

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 169
    asignment  go to state 54


state 154

   38 program: FOR_ST '(' expr ')' '{' . program '}'

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 170
    asignment  go to state 54


state 155

   34 program: WHILE_S '(' boolean_expr ')' '{' . program '}'

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 171
    asignment  go to state 54


state 156

   36 program: WHILE_T '(' boolean_expr ')' '{' . program '}'

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 172
    asignment  go to state 54


state 157

   35 program: WHILE_ST '(' boolean_expr ')' '{' . program '}'

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 173
    asignment  go to state 54


state 158

   31 program: IF '(' boolean_expr ')' . '{' program '}' $@1
   33        | IF '(' boolean_expr ')' . '{' program '}' ELSE '{' program '}' $@2

    '{'  shift, and go to state 174


state 159

    6 module_output: '{' SPEAK processinputlist . '}' '{' WRITE processinputlist '}'
    9 processinputlist: processinputlist . ';' singleproceslist

    '}'  shift, and go to state 175
    ';'  shift, and go to state 40


state 160

   45 statement: IF '(' boolean_expr ')' . '{' stmt_list '}'
   46          | IF '(' boolean_expr ')' . '{' stmt_list '}' ELSE '{' stmt_list '}'

    '{'  shift, and go to state 176


state 161

   13 singleproceslist: '(' '(' simplevariablelist ';' ')' '[' . ']' ')'

    ']'  shift, and go to state 177


state 162

    5 module_input: '{' LISTEN processinputlist '}' '{' READ processinputlist '}' .

    $default  reduce using rule 5 (module_input)


state 163

   52 expr: IDENTIFIER_LOW '[' expr ']' .

    $default  reduce using rule 52 (expr)


state 164

   41 stmt_list: stmt_list . statement ';'
   44 statement: WHILE '(' boolean_expr ')' '{' stmt_list . '}'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 59
    FOR             shift, and go to state 21
    IDENTIFIER_LOW  shift, and go to state 60
    '}'             shift, and go to state 178

    statement  go to state 61
    asignment  go to state 62


state 165

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   31        | IF '(' boolean_expr ')' '{' program . '}' $@1
   33        | IF '(' boolean_expr ')' '{' program . '}' ELSE '{' program '}' $@2

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58
    '}'                     shift, and go to state 179


state 166

   41 stmt_list: stmt_list . statement ';'
   45 statement: IF '(' boolean_expr ')' '{' stmt_list . '}'
   46          | IF '(' boolean_expr ')' '{' stmt_list . '}' ELSE '{' stmt_list '}'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 59
    FOR             shift, and go to state 21
    IDENTIFIER_LOW  shift, and go to state 60
    '}'             shift, and go to state 180

    statement  go to state 61
    asignment  go to state 62


state 167

   41 stmt_list: stmt_list . statement ';'
   47 statement: FOR '(' expr ')' '{' stmt_list . '}'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 59
    FOR             shift, and go to state 21
    IDENTIFIER_LOW  shift, and go to state 60
    '}'             shift, and go to state 181

    statement  go to state 61
    asignment  go to state 62


state 168

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   37        | FOR_S '(' expr ')' '{' program . '}'

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58
    '}'                     shift, and go to state 182


state 169

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   39        | FOR_T '(' expr ')' '{' program . '}'

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58
    '}'                     shift, and go to state 183


state 170

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   38        | FOR_ST '(' expr ')' '{' program . '}'

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58
    '}'                     shift, and go to state 184


state 171

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   34        | WHILE_S '(' boolean_expr ')' '{' program . '}'

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58
    '}'                     shift, and go to state 185


state 172

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   36        | WHILE_T '(' boolean_expr ')' '{' program . '}'

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58
    '}'                     shift, and go to state 186


state 173

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   35        | WHILE_ST '(' boolean_expr ')' '{' program . '}'

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58
    '}'                     shift, and go to state 187


state 174

   31 program: IF '(' boolean_expr ')' '{' . program '}' $@1
   33        | IF '(' boolean_expr ')' '{' . program '}' ELSE '{' program '}' $@2

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 165
    asignment  go to state 54


state 175

    6 module_output: '{' SPEAK processinputlist '}' . '{' WRITE processinputlist '}'

    '{'  shift, and go to state 188


state 176

   45 statement: IF '(' boolean_expr ')' '{' . stmt_list '}'
   46          | IF '(' boolean_expr ')' '{' . stmt_list '}' ELSE '{' stmt_list '}'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 59
    FOR             shift, and go to state 21
    IDENTIFIER_LOW  shift, and go to state 60

    stmt_list  go to state 166
    statement  go to state 35
    asignment  go to state 62


state 177

   13 singleproceslist: '(' '(' simplevariablelist ';' ')' '[' ']' . ')'

    ')'  shift, and go to state 189


state 178

   44 statement: WHILE '(' boolean_expr ')' '{' stmt_list '}' .

    $default  reduce using rule 44 (statement)


state 179

   31 program: IF '(' boolean_expr ')' '{' program '}' . $@1
   33        | IF '(' boolean_expr ')' '{' program '}' . ELSE '{' program '}' $@2

    ELSE  shift, and go to state 190

    $default  reduce using rule 30 ($@1)

    $@1  go to state 191


state 180

   45 statement: IF '(' boolean_expr ')' '{' stmt_list '}' .
   46          | IF '(' boolean_expr ')' '{' stmt_list '}' . ELSE '{' stmt_list '}'

    ELSE  shift, and go to state 192

    $default  reduce using rule 45 (statement)


state 181

   47 statement: FOR '(' expr ')' '{' stmt_list '}' .

    $default  reduce using rule 47 (statement)


state 182

   37 program: FOR_S '(' expr ')' '{' program '}' .

    $default  reduce using rule 37 (program)


state 183

   39 program: FOR_T '(' expr ')' '{' program '}' .

    $default  reduce using rule 39 (program)


state 184

   38 program: FOR_ST '(' expr ')' '{' program '}' .

    $default  reduce using rule 38 (program)


state 185

   34 program: WHILE_S '(' boolean_expr ')' '{' program '}' .

    $default  reduce using rule 34 (program)


state 186

   36 program: WHILE_T '(' boolean_expr ')' '{' program '}' .

    $default  reduce using rule 36 (program)


state 187

   35 program: WHILE_ST '(' boolean_expr ')' '{' program '}' .

    $default  reduce using rule 35 (program)


state 188

    6 module_output: '{' SPEAK processinputlist '}' '{' . WRITE processinputlist '}'

    WRITE  shift, and go to state 193


state 189

   13 singleproceslist: '(' '(' simplevariablelist ';' ')' '[' ']' ')' .

    $default  reduce using rule 13 (singleproceslist)


state 190

   33 program: IF '(' boolean_expr ')' '{' program '}' ELSE . '{' program '}' $@2

    '{'  shift, and go to state 194


state 191

   31 program: IF '(' boolean_expr ')' '{' program '}' $@1 .

    $default  reduce using rule 31 (program)


state 192

   46 statement: IF '(' boolean_expr ')' '{' stmt_list '}' ELSE . '{' stmt_list '}'

    '{'  shift, and go to state 195


state 193

    6 module_output: '{' SPEAK processinputlist '}' '{' WRITE . processinputlist '}'

    NIL             shift, and go to state 12
    IDENTIFIER_LOW  shift, and go to state 13
    '('             shift, and go to state 14

    processinputlist    go to state 196
    singleproceslist    go to state 16
    simplevariablelist  go to state 17
    variable            go to state 18


state 194

   33 program: IF '(' boolean_expr ')' '{' program '}' ELSE '{' . program '}' $@2

    IF              shift, and go to state 52
    FOR_S           shift, and go to state 22
    FOR_T           shift, and go to state 23
    FOR_ST          shift, and go to state 24
    WHILE_S         shift, and go to state 25
    WHILE_T         shift, and go to state 26
    WHILE_ST        shift, and go to state 27
    IDENTIFIER_LOW  shift, and go to state 28
    IDENTIFIER_BIG  shift, and go to state 29
    '('             shift, and go to state 30

    $default  reduce using rule 40 (program)

    variable   go to state 32
    program    go to state 197
    asignment  go to state 54


state 195

   46 statement: IF '(' boolean_expr ')' '{' stmt_list '}' ELSE '{' . stmt_list '}'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 59
    FOR             shift, and go to state 21
    IDENTIFIER_LOW  shift, and go to state 60

    stmt_list  go to state 198
    statement  go to state 35
    asignment  go to state 62


state 196

    6 module_output: '{' SPEAK processinputlist '}' '{' WRITE processinputlist . '}'
    9 processinputlist: processinputlist . ';' singleproceslist

    '}'  shift, and go to state 199
    ';'  shift, and go to state 40


state 197

   26 program: program . COMPOSITION_HORIZONTAL program
   27        | program . COMPOSITION_VERTICAL program
   28        | program . COMPOSITION_DIAGONAL program
   33        | IF '(' boolean_expr ')' '{' program '}' ELSE '{' program . '}' $@2

    COMPOSITION_DIAGONAL    shift, and go to state 56
    COMPOSITION_VERTICAL    shift, and go to state 57
    COMPOSITION_HORIZONTAL  shift, and go to state 58
    '}'                     shift, and go to state 200


state 198

   41 stmt_list: stmt_list . statement ';'
   46 statement: IF '(' boolean_expr ')' '{' stmt_list '}' ELSE '{' stmt_list . '}'

    WHILE           shift, and go to state 19
    IF              shift, and go to state 59
    FOR             shift, and go to state 21
    IDENTIFIER_LOW  shift, and go to state 60
    '}'             shift, and go to state 201

    statement  go to state 61
    asignment  go to state 62


state 199

    6 module_output: '{' SPEAK processinputlist '}' '{' WRITE processinputlist '}' .

    $default  reduce using rule 6 (module_output)


state 200

   33 program: IF '(' boolean_expr ')' '{' program '}' ELSE '{' program '}' . $@2

    $default  reduce using rule 32 ($@2)

    $@2  go to state 202


state 201

   46 statement: IF '(' boolean_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}' .

    $default  reduce using rule 46 (statement)


state 202

   33 program: IF '(' boolean_expr ')' '{' program '}' ELSE '{' program '}' $@2 .

    $default  reduce using rule 33 (program)
